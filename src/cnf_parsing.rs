use std::{path::Path, fs::File, io::prelude::*};

use crate::dpll::Literal;

pub fn parse_cnf(fp: &str) -> String {
    let path = Path::new(fp);
    let mut file = File::open(path).unwrap_or_else(|_| panic!("File {fp} was not found."));

	// Read the file contents into a string, returns `io::Result<usize>`
    let mut s = String::new();
    file.read_to_string(&mut s).unwrap_or_else(|why| panic!("couldn't read {}: {}", fp, why));

    s
}

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn check_parse() {
        let contents = parse_cnf("cnfs/uf20-01.cnf");
        assert_eq!(contents.lines().next(), Some("c This Formular is generated by mcnf"))
    }
}
